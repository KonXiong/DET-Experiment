/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 10.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 100000.0;
	SIMULATION_TIME = 100000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("boxing")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("boxing[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "boxing";
}

SIGNAL("boxing[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "boxing";
}

SIGNAL("chengq")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("chengq[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "chengq";
}

SIGNAL("chengq[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "chengq";
}

SIGNAL("chengq[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "chengq";
}

SIGNAL("chengq[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "chengq";
}

SIGNAL("chengq[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "chengq";
}

SIGNAL("chengq[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "chengq";
}

SIGNAL("chengq[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "chengq";
}

SIGNAL("chengq[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "chengq";
}

SIGNAL("chengq[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "chengq";
}

SIGNAL("chengq[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "chengq";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("fenping")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("fenping[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "fenping";
}

SIGNAL("fenping[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "fenping";
}

SIGNAL("fenping[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "fenping";
}

SIGNAL("fudu")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("fudu[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "fudu";
}

SIGNAL("fudu[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "fudu";
}

SIGNAL("rst")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("boxing[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 72960.0;
		LEVEL 1 FOR 26880.0;
		LEVEL 0 FOR 160.0;
	}
}

TRANSITION_LIST("boxing[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35840.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 160.0;
	}
}

TRANSITION_LIST("chengq[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 9980.0;
		LEVEL 0 FOR 10040.0;
		LEVEL 1 FOR 9980.0;
		LEVEL 0 FOR 10020.0;
		LEVEL 1 FOR 10020.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 10020.0;
		LEVEL 0 FOR 2875.0;
		LEVEL 1 FOR 2125.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 10020.0;
		LEVEL 0 FOR 4895.0;
	}
}

TRANSITION_LIST("chengq[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1660.0;
		LEVEL 1 FOR 6660.0;
		LEVEL 0 FOR 1660.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 6660.0;
		LEVEL 1 FOR 1700.0;
		LEVEL 0 FOR 1660.0;
		LEVEL 1 FOR 6660.0;
		LEVEL 0 FOR 1660.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 8340.0;
		LEVEL 1 FOR 10020.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 10020.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 2500.0;
		}
		LEVEL 0 FOR 2520.0;
		LEVEL 1 FOR 4980.0;
		LEVEL 0 FOR 2520.0;
		LEVEL 1 FOR 2500.0;
		LEVEL 0 FOR 2235.0;
		LEVEL 1 FOR 160.0;
	}
}

TRANSITION_LIST("chengq[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 860.0;
		LEVEL 0 FOR 1040.0;
		LEVEL 1 FOR 4580.0;
		LEVEL 0 FOR 1040.0;
		LEVEL 1 FOR 860.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 820.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 1040.0;
		LEVEL 0 FOR 4580.0;
		LEVEL 1 FOR 1040.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 840.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 860.0;
		LEVEL 0 FOR 1040.0;
		LEVEL 1 FOR 4580.0;
		LEVEL 0 FOR 1040.0;
		LEVEL 1 FOR 860.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 820.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 1040.0;
		LEVEL 0 FOR 7300.0;
		LEVEL 1 FOR 10020.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 10020.0;
		LEVEL 0 FOR 2875.0;
		LEVEL 1 FOR 865.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1260.0;
			LEVEL 1 FOR 1240.0;
		}
		LEVEL 0 FOR 2520.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1240.0;
			LEVEL 0 FOR 1260.0;
		}
		LEVEL 1 FOR 1260.0;
		LEVEL 0 FOR 1240.0;
		LEVEL 1 FOR 2500.0;
		LEVEL 0 FOR 1240.0;
		LEVEL 1 FOR 1260.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1260.0;
			LEVEL 1 FOR 1240.0;
		}
		LEVEL 0 FOR 995.0;
		LEVEL 1 FOR 160.0;
	}
}

TRANSITION_LIST("chengq[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 420.0;
		LEVEL 1 FOR 440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 3180.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 440.0;
		LEVEL 0 FOR 420.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 420.0;
		LEVEL 1 FOR 420.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 680.0;
		LEVEL 0 FOR 3220.0;
		LEVEL 1 FOR 680.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 420.0;
		LEVEL 0 FOR 420.0;
		LEVEL 1 FOR 420.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 420.0;
		LEVEL 1 FOR 440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 3180.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 440.0;
		LEVEL 0 FOR 420.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 420.0;
		LEVEL 1 FOR 420.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 680.0;
		LEVEL 0 FOR 6620.0;
		LEVEL 1 FOR 10020.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 10020.0;
		LEVEL 0 FOR 2875.0;
		LEVEL 1 FOR 245.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 620.0;
			LEVEL 1 FOR 620.0;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 620.0;
		}
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 1280.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 620.0;
			LEVEL 0 FOR 620.0;
			LEVEL 1 FOR 620.0;
			LEVEL 0 FOR 640.0;
		}
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 1260.0;
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 640.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 620.0;
			LEVEL 1 FOR 620.0;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 620.0;
		}
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 375.0;
		LEVEL 1 FOR 160.0;
	}
}

TRANSITION_LIST("chengq[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 380.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2220.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 380.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 220.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2260.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 220.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 220.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 220.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 380.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2220.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 380.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 220.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 6140.0;
		LEVEL 1 FOR 10020.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 10020.0;
		LEVEL 0 FOR 3120.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 300.0;
		}
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 300.0;
		}
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 640.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 300.0;
		}
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 300.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 300.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 300.0;
		}
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 620.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 300.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 300.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 300.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 300.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 300.0;
			LEVEL 1 FOR 320.0;
		}
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 95.0;
	}
}

TRANSITION_LIST("chengq[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 120.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 120.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 140.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 1540.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 140.0;
			LEVEL 0 FOR 140.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 120.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 100.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 120.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 340.0;
		LEVEL 0 FOR 1580.0;
		LEVEL 1 FOR 340.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 120.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 120.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 100.0;
				LEVEL 1 FOR 100.0;
			}
			LEVEL 0 FOR 100.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 120.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 120.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 140.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 1540.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 140.0;
			LEVEL 0 FOR 140.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 120.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 100.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 120.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 340.0;
		LEVEL 0 FOR 1580.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 4205.0;
		LEVEL 1 FOR 10020.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 10020.0;
		LEVEL 0 FOR 2875.0;
		LEVEL 1 FOR 85.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 140.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 160.0;
				LEVEL 1 FOR 160.0;
			}
		}
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 140.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 160.0;
				LEVEL 1 FOR 160.0;
			}
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 140.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 160.0;
				LEVEL 1 FOR 160.0;
			}
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 95.0;
	}
}

TRANSITION_LIST("chengq[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 80.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 1020.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 80.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 60.0;
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 80.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 1020.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 80.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 4220.0;
		LEVEL 1 FOR 10020.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 10020.0;
		LEVEL 0 FOR 2875.0;
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 0 FOR 80.0;
				LEVEL 1 FOR 80.0;
			}
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 1 FOR 80.0;
				LEVEL 0 FOR 80.0;
			}
		}
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 1 FOR 80.0;
				LEVEL 0 FOR 80.0;
			}
			LEVEL 1 FOR 60.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 0 FOR 80.0;
				LEVEL 1 FOR 80.0;
			}
		}
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 0 FOR 80.0;
				LEVEL 1 FOR 80.0;
			}
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 1 FOR 80.0;
				LEVEL 0 FOR 80.0;
			}
		}
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 60.0;
				NODE
				{
					REPEAT = 5;
					LEVEL 0 FOR 80.0;
					LEVEL 1 FOR 80.0;
				}
				LEVEL 0 FOR 60.0;
				NODE
				{
					REPEAT = 5;
					LEVEL 1 FOR 80.0;
					LEVEL 0 FOR 80.0;
				}
			}
			LEVEL 1 FOR 60.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 0 FOR 80.0;
				LEVEL 1 FOR 80.0;
			}
		}
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 55.0;
	}
}

TRANSITION_LIST("chengq[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 740.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 740.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 4220.0;
		LEVEL 1 FOR 10020.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 10020.0;
		LEVEL 0 FOR 2880.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 10;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 40.0;
			}
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 10;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 10;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 10;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 40.0;
			}
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 10;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 40.0;
			}
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 10;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 35.0;
	}
}

TRANSITION_LIST("chengq[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 4220.0;
		LEVEL 1 FOR 10020.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 10020.0;
		LEVEL 0 FOR 2880.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			NODE
			{
				REPEAT = 20;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			NODE
			{
				REPEAT = 20;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 21;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			NODE
			{
				REPEAT = 20;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			NODE
			{
				REPEAT = 15;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			NODE
			{
				REPEAT = 21;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 40.0;
				NODE
				{
					REPEAT = 20;
					LEVEL 0 FOR 20.0;
					LEVEL 1 FOR 20.0;
				}
				LEVEL 0 FOR 20.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 40.0;
				NODE
				{
					REPEAT = 20;
					LEVEL 1 FOR 20.0;
					LEVEL 0 FOR 20.0;
				}
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 31;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 21;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			NODE
			{
				REPEAT = 20;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			NODE
			{
				REPEAT = 20;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			NODE
			{
				REPEAT = 20;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 21;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			NODE
			{
				REPEAT = 20;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 15.0;
	}
}

TRANSITION_LIST("chengq[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 4220.0;
		LEVEL 1 FOR 10020.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 10020.0;
		LEVEL 0 FOR 3260.0;
		LEVEL 1 FOR 420.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 440.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 420.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 440.0;
			LEVEL 1 FOR 440.0;
			LEVEL 0 FOR 420.0;
			LEVEL 1 FOR 440.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 440.0;
			LEVEL 1 FOR 440.0;
		}
		LEVEL 0 FOR 420.0;
		LEVEL 1 FOR 440.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 440.0;
		LEVEL 0 FOR 420.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 440.0;
			LEVEL 0 FOR 440.0;
			LEVEL 1 FOR 420.0;
			LEVEL 0 FOR 440.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 440.0;
			LEVEL 0 FOR 420.0;
			LEVEL 1 FOR 440.0;
			LEVEL 0 FOR 440.0;
		}
		LEVEL 1 FOR 420.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 15.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 10000;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("fenping[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("fenping[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("fenping[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("fudu[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("fudu[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("rst")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "boxing";
	EXPAND_STATUS = EXPANDED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3;
}

DISPLAY_LINE
{
	CHANNEL = "boxing[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "boxing[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "chengq";
	EXPAND_STATUS = EXPANDED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
	CHILDREN = 5, 6, 7, 8, 9, 10, 11, 12, 13, 14;
}

DISPLAY_LINE
{
	CHANNEL = "chengq[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "chengq[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "chengq[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "chengq[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "chengq[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "chengq[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "chengq[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "chengq[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "chengq[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "chengq[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "fenping";
	EXPAND_STATUS = EXPANDED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
	CHILDREN = 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "fenping[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "fenping[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "fenping[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "fudu";
	EXPAND_STATUS = EXPANDED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
	CHILDREN = 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "fudu[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "fudu[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "rst";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 10000;
	MASTER = TRUE;
}
;
